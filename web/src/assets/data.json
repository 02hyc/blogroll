[
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "Hello World on my Hexo blog",
    "link": "https://blog.lyc8503.site/2098/12/31/hello-world/",
    "summary": "\n    \n      \n      \n        <p>前段时间又调整了我的 Orange Pi 架构, 因此 Wordpress 上的博客又咕咕咕了好久没有写.<br>到现在还忙于学业上的, 亦或是其他程序上的琐事没能将服务器的应用全面 docker 化, 博客也就没有部署. 现在尝试使用 Hexo + Github + Ne\n      \n    \n    ",
    "pubDate": "2098-12-31T16:00:00.000Z",
    "pubDateYYMMDD": "2098-12-31"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep11. 升级 OpenWRT 至正式版系统",
    "link": "https://blog.lyc8503.site/2022/02/24/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/11-upgrade-openwrt/",
    "summary": "\n    \n      <p>前几天想在路由器上安装一些新软件包, 发现 opkg 新安装的大部分软件包很多出现类似 <code>__select_time64: symbol not found</code> 的报错无法正常运行.</p>\n<p>Google 搜索后发现我上次安装的 OpenWRT 是基于 snapshot 版本的, 内核中的库的接口发生了改变. </p>\n<blockquote>\n<p>The musl version upgrade in September changed the internal time handling from 32bit to 64bit even in the 32bit targets (like mipsel24).</p>\n</blockquote>\n<p>正好路由器使用上次的固件也出现过不稳定现象, 所以也借此机会回归无魔改的官方固件.</p>\n    \n    ",
    "pubDate": "2022-02-24T14:22:08.000Z",
    "pubDateYYMMDD": "2022-02-24"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "为 Hexo 博客中的 Markdown 添加卡片式链接支持",
    "link": "https://blog.orangex4.cool/post/hexo-link-card/",
    "summary": "<h1 id=\"为-hexo-博客中的-markdown-添加卡片式链接支持\"   >\n          <a href=\"#为-hexo-博客中的-markdown-添加卡片式链接支持\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>为 Hexo 博客中的 Markdown 添加卡片式链接支持</h1>\n      \n<p>我写了一个 <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/OrangeX4/hexo-link-card\" >Hexo 插件</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，可以使用现有 Markdown 语法将链接转换为卡片式链接（网页卡片）.</p>\n<p>这个插件的 GitHub 地址在这里：</p>\n<p><a target=\"_blank\" href=\"https://github.com/OrangeX4/hexo-link-card\" style=\"position: relative; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; box-sizing: border-box; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-align-items: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; width: 390px; min-height: 84px; border-radius: 8px; max-width: 100%; overflow: hidden; margin: 16px auto; padding: 12px 12px 9px 12px; background-color: #F6F6F6;\"><span class=\"LinkCard-contents\"><span style=\"display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis; max-height: 40px; line-height: 1.25; color: #121212;\">OrangeX4/hexo-link-card - GitHub</span><span style=\"display: -webkit-box; font-size: 13px; height: 18px; line-height: 18px; color: #999; word-break: break-all; text-overflow: ellipsis; overflow: hidden; -webkit-line-clamp: 1; -webkit-box-orient: vertical;\"><span style=\"display: inline-flex; align-items: center;\"><svg class=\"Zi Zi--InsertLink\" fill=\"currentColor\" viewBox=\"0 0 24 24\" width=\"14\" height=\"14\"><path d=\"M13.414 4.222a4.5 4.5 0 1 1 6.364 6.364l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005a2.5 2.5 0 1 0-3.536-3.536l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005zm-6.187 6.187a.5.5 0 0 1 .638-.058l.07.058.706.707a.5.5 0 0 1 .058.638l-.058.07-3.005 3.004a2.5 2.5 0 0 0 3.405 3.658l.13-.122 3.006-3.005a.5.5 0 0 1 .638-.058l.069.058.707.707a.5.5 0 0 1 .058.638l-.058.069-3.005 3.005a4.5 4.5 0 0 1-6.524-6.196l.16-.168 3.005-3.005zm8.132-3.182a.25.25 0 0 1 .353 0l1.061 1.06a.25.25 0 0 1 0 .354l-8.132 8.132a.25.25 0 0 1-.353 0l-1.061-1.06a.25.25 0 0 1 0-.354l8.132-8.132z\"></path></svg></span><span>https://github.com/OrangeX4/hexo-link-card</span></span></span></a></p>\n<p><strong>卡片式链接的优点：</strong></p>\n<ol>\n<li>在移动互联网的时代，有许多人通过智能手机浏览文章，通过卡片式链接打开新页面对他们更友好；</li>\n<li>旧式的链接显示方式不够明显，很容易导致人们忽视了这是一条链接，卡片式链接能够突出显示，不容易被他人忽略；</li>\n<li>许多平台，例如 Bilibili，知乎，微信公众号等平台，均有将链接转换为卡片式链接的功能，如果能在书写 Markdown 阶段，就将卡片式链接的书写考虑进去，能给后续发布带来很大的便利。</li>\n</ol>",
    "pubDate": "2022-02-09T16:00:00.000Z",
    "pubDateYYMMDD": "2022-02-09"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "VSCode 通过 Remote - SSH 远程连接腾讯云服务器",
    "link": "https://blog.orangex4.cool/post/cloud-server-in-vscode-ssh/",
    "summary": "<h1 id=\"vscode-通过-remote-ssh-远程连接腾讯云服务器\"   >\n          <a href=\"#vscode-通过-remote-ssh-远程连接腾讯云服务器\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>VSCode 通过 Remote - SSH 远程连接腾讯云服务器</h1>\n      \n<p>每当我切换到一个新环境，例如新电脑、新系统时，总是会忘记如何配置 VSCode 中的 Remote - SSH，也就很难连上腾讯云服务器进行开发。</p>\n<p>所以我特意将配置的步骤写成一篇博文，记录如下。</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://gitee.com/orangex4/picgo/raw/master/images/20220208204402.png\"  alt=\"\" />\n      </p>",
    "pubDate": "2022-02-07T16:00:00.000Z",
    "pubDateYYMMDD": "2022-02-07"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "Cloudflare Tunnel 速度测试",
    "link": "https://blog.caomingjun.com/cloudflare-tunnel-speedtest/",
    "summary": "<p>2021年4月，<a href=\"https://blog.cloudflare.com/tunnel-for-everyone/\">Cloudflare 宣布其旗下的服务 Cloudflare Tunnel 免费开放</a>。<a href=\"https://www.cloudflare.com/zh-cn/products/tunnel/\">Cloudflare Tunnel</a> 可以在服务器和 Cloudflare 全球网络之间建立连接，使得服务器在不打开任何防火墙入站规则（甚至可以没有公网IP）的情况下得以被公网访问。这一技术可以应用于内网穿透、保护服务器安全性等领域。</p>\n<p>网络上已经有很多关于 Cloudflare Tunnel 的使用教程，但截至本文章发布，我并没有找到延迟和速度测试。因此我自己分别对上海和香港的服务器进行了测试并发布在这里。</p>",
    "pubDate": "2022-02-06T11:23:00.000Z",
    "pubDateYYMMDD": "2022-02-06"
  },
  {
    "name": "Idealclover's Blog",
    "xmlUrl": "https://idealclover.top/feed",
    "htmlUrl": "https://idealclover.top/",
    "title": "Pico Neo 3 开箱体验 - XR 或许已经走出了最低谷",
    "link": "https://idealclover.top/archives/630/",
    "summary": "“字节跳动 50 亿元收购 pico，宣布进军元宇宙”这成为了同事，会不会给点优惠啊，翠翠这么想着，结果就有了内部员工福利——原来 2599 的 Pico Neo 3 只要 1599，甚至到手写...",
    "pubDate": "2022-02-04T11:30:00.000Z",
    "pubDateYYMMDD": "2022-02-04"
  },
  {
    "name": "Typoverflow's Blog",
    "xmlUrl": "https://blog.typoverflow.me/index.php/feed/",
    "htmlUrl": "https://blog.typoverflow.me/",
    "title": "杂记 | 2021年终总结",
    "link": "https://blog.typoverflow.me/index.php/archives/34/",
    "summary": "写在前面在2021年最后的那一个月里，开始重新打理自己的博客，也终于有时间好好思考一下过去的一年自己做了些什么事。总感觉2020年年初开始时间真的过得飞快，也不知道到底是因为生活到了一定的阶段后...",
    "pubDate": "2022-01-26T13:42:00.000Z",
    "pubDateYYMMDD": "2022-01-26"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "2021折腾总结",
    "link": "https://blog.caomingjun.com/my2021/",
    "summary": "<p>在刚刚过去的 2021 年，我在课内课外都折腾了不少东西（主要是在下半年）。其实这其中的许多东西都值得写一篇博客记录，但是我自从创建网站之后就比较忙，没有写，于是在这篇文章做一个总结。可能未来会补上那些博客。</p>",
    "pubDate": "2022-01-23T11:36:40.000Z",
    "pubDateYYMMDD": "2022-01-23"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep10. 使用群晖 QuickConnect 访问内网任意 / 第三方 TCP 服务",
    "link": "https://blog.lyc8503.site/2022/01/21/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/10-all-in-quickconnect/",
    "summary": "\n    \n      <p><strong>群晖的 QuickConnect</strong> 是群晖自带的一项内网穿透功能, 通过某宝的洗白服务, 自建的黑群晖也可以使用 QuickConnect 来进行内网穿透.</p>\n<p>QuickConnect 与群晖自家的应用搭配使用很方便, 可以实现<strong>内外网的无缝切换</strong>, 只需要填入 QuickConnect ID 即可.</p>\n<p>但<strong>缺点</strong>是 QuickConnect 功能只能在<strong>群晖官方的 APP</strong> 上使用, 而群晖的很多 APP 实际使用体验很差, 缺失很多最基本的功能.</p>\n<p><a href=\"https://blog.lyc8503.site/2021/08/24/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/9-syno-ipv6-ddns/\">AIO Ep.9</a> 中提到了使用 ipv6 DDNS 的方式, <a href=\"https://blog.lyc8503.site/2021/09/30/%E7%A1%AC%E4%BB%B6%E3%81%AE%E7%A0%94%E7%A9%B6/phicomm-n1/#more\">这篇有关 n1 盒子的文章</a>中展示了配置透明代理访问内网任意服务的方式. 但这种方法在目前 <strong>ipv6 尚未全面普及</strong>的时候仍有不便.(很多 Wi-Fi 不支持或默认未开启 ipv6, 必须使用热点共享.)</p>\n<p>最终经过搜索和实验我找到了使用 QuickConnect 代理所有应用流量的方法, 可以节约自己搭建反向代理或购买反向代理的费用.<del>(白嫖到榨干它)</del> 整理记录在此.</p>\n    \n    ",
    "pubDate": "2022-01-21T15:18:34.000Z",
    "pubDateYYMMDD": "2022-01-21"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "关于 SOP(同源策略) / CORS(跨源资源共享) / CSRF(跨站请求伪造) 的一些认识",
    "link": "https://blog.lyc8503.site/2022/01/20/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/Web/cors-and-csrf/",
    "summary": "\n    \n      <p><strong>同源策略</strong>是指在<a href=\"https://zh.wikipedia.org/wiki/排版引擎\" target=\"_blank\" rel=\"noopener\">Web浏览器</a>中，允许某个网页<a href=\"https://zh.wikipedia.org/wiki/腳本\" target=\"_blank\" rel=\"noopener\">脚本</a>访问另一个网页的数据，但前提是这两个网页必须有相同的<a href=\"https://zh.wikipedia.org/wiki/统一资源标志符\" target=\"_blank\" rel=\"noopener\">URI</a>、<a href=\"https://zh.wikipedia.org/wiki/主機名稱\" target=\"_blank\" rel=\"noopener\">主机名</a>和<a href=\"https://zh.wikipedia.org/wiki/通訊埠\" target=\"_blank\" rel=\"noopener\">端口号</a>，一旦两个网站满足上述条件，这两个网站就被认定为具有相同来源。此策略可防止某个网页上的恶意<a href=\"https://zh.wikipedia.org/wiki/脚本\" target=\"_blank\" rel=\"noopener\">脚本</a>通过该页面的<a href=\"https://zh.wikipedia.org/wiki/文档对象模型\" target=\"_blank\" rel=\"noopener\">文档对象模型</a>访问另一网页上的敏感数据。</p>\n<p><strong>跨域资源共享</strong>（英语：Cross-origin resource sharing，缩写：CORS），用于让网页的受限资源能够被其他域名的页面访问的一种机制。</p>\n<p><strong>跨站请求伪造</strong>（英语：Cross-site request forgery），也被称为 <strong>one-click attack</strong> 或者 <strong>session riding</strong>，通常缩写为 <strong>CSRF</strong> 或者 <strong>XSRF</strong>， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。</p>\n    \n    ",
    "pubDate": "2022-01-20T03:54:55.000Z",
    "pubDateYYMMDD": "2022-01-20"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "Windows 下的实用工具 PowerToys 推荐",
    "link": "https://blog.lyc8503.site/2022/01/20/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB0w0/windows-powertoys/",
    "summary": "\n    \n      <p>来安利一下这个非常强大的软件 PowerToys.</p>\n<p>PowerToys 是微软官方和开源社区共同维护的一组实用工具.</p>\n<p>包含了 Explorer markdown/pdf/svg 预览, 屏幕取色, PowerToys Run(快速启动), 正则文件重命名, 快捷键映射, 图像大小调整, 快速定位鼠标, 保持唤醒等一系列十分实用的功能.</p>\n    \n    ",
    "pubDate": "2022-01-20T03:38:25.000Z",
    "pubDateYYMMDD": "2022-01-20"
  },
  {
    "name": "Typoverflow's Blog",
    "xmlUrl": "https://blog.typoverflow.me/index.php/feed/",
    "htmlUrl": "https://blog.typoverflow.me/",
    "title": "2022的Flags",
    "link": "https://blog.typoverflow.me/index.php/archives/32/",
    "summary": "可惜第一个月就开始摸了[goal title=\"在学\"][item progress=\"1%\"] cpp guidelines [/item][item progress=\"41%\"] cs14...",
    "pubDate": "2022-01-15T05:21:00.000Z",
    "pubDateYYMMDD": "2022-01-15"
  },
  {
    "name": "Antares's Blog",
    "xmlUrl": "https://chr.fan/feed",
    "htmlUrl": "https://chr.fan",
    "title": "高速旋转球体的物理动画模拟（虚幻4实现）",
    "link": "https://chr.fan/ue4-ball/",
    "summary": "<div><img width=\"300\" height=\"181\" src=\"https://chr.fan/wp-content/uploads/2022/01/54-300x181.png\" class=\"attachment-medium size-medium wp-post-image\" alt=\"\" loading=\"lazy\" style=\"margin-bottom: 15px;\" srcset=\"https://chr.fan/wp-content/uploads/2022/01/54-300x181.png 300w, https://chr.fan/wp-content/uploads/2022/01/54-1024x617.png 1024w, https://chr.fan/wp-content/uploads/2022/01/54-768x462.png 768w, https://chr.fan/wp-content/uploads/2022/01/54-1536x925.png 1536w, https://chr.fan/wp-content/uploads/2022/01/54.png 2006w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></div>\n<p>GitHub仓库 地址 前几天突发奇想，虚幻4里有没有办法模拟出乒乓球在真实世界的运动规律呢（比如下旋的回弹，上旋加速等）？ 据我 ...</p>\n<p>The post <a rel=\"nofollow\" href=\"https://chr.fan/ue4-ball/\">高速旋转球体的物理动画模拟（虚幻4实现）</a> appeared first on <a rel=\"nofollow\" href=\"https://chr.fan\">α-Lyrae</a>.</p>\n",
    "pubDate": "2022-01-01T15:36:33.000Z",
    "pubDateYYMMDD": "2022-01-01"
  },
  {
    "name": "Antares's Blog",
    "xmlUrl": "https://chr.fan/feed",
    "htmlUrl": "https://chr.fan",
    "title": "GAMES101学习笔记",
    "link": "https://chr.fan/games101/",
    "summary": "<div><img width=\"300\" height=\"170\" src=\"https://chr.fan/wp-content/uploads/2022/01/64-300x170.jpg\" class=\"attachment-medium size-medium wp-post-image\" alt=\"\" loading=\"lazy\" style=\"margin-bottom: 15px;\" srcset=\"https://chr.fan/wp-content/uploads/2022/01/64-300x170.jpg 300w, https://chr.fan/wp-content/uploads/2022/01/64-1024x580.jpg 1024w, https://chr.fan/wp-content/uploads/2022/01/64-768x435.jpg 768w, https://chr.fan/wp-content/uploads/2022/01/64-1536x869.jpg 1536w, https://chr.fan/wp-content/uploads/2022/01/64.jpg 2048w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></div>\n<p>GAMES101课后作业仓库 博客的LaTeX支持真的差得离谱……符号过大，格式也不太好看，可能以后会比较少在博客上写数学相关的东 ...</p>\n<p>The post <a rel=\"nofollow\" href=\"https://chr.fan/games101/\">GAMES101学习笔记</a> appeared first on <a rel=\"nofollow\" href=\"https://chr.fan\">α-Lyrae</a>.</p>\n",
    "pubDate": "2022-01-01T15:27:59.000Z",
    "pubDateYYMMDD": "2022-01-01"
  },
  {
    "name": "Typoverflow's Blog",
    "xmlUrl": "https://blog.typoverflow.me/index.php/feed/",
    "htmlUrl": "https://blog.typoverflow.me/",
    "title": "观影记录",
    "link": "https://blog.typoverflow.me/index.php/archives/14/",
    "summary": "观影记录",
    "pubDate": "2021-12-26T15:59:00.000Z",
    "pubDateYYMMDD": "2021-12-26"
  },
  {
    "name": "Typoverflow's Blog",
    "xmlUrl": "https://blog.typoverflow.me/index.php/feed/",
    "htmlUrl": "https://blog.typoverflow.me/",
    "title": "南大印象",
    "link": "https://blog.typoverflow.me/index.php/archives/4/",
    "summary": "南大印象",
    "pubDate": "2021-12-25T08:53:00.000Z",
    "pubDateYYMMDD": "2021-12-25"
  },
  {
    "name": "LadderOperator's Blog",
    "xmlUrl": "https://ladderoperator.top/index.xml",
    "htmlUrl": "https://ladderoperator.top",
    "title": "从 Wordpress 切换至 Hugo",
    "link": "https://ladderoperator.top/post/hello_hugo/",
    "summary": "由于某次 Wordpress 差点崩没了的经历，细思恐极，觉得文章应该有个比较好的备份模式。故 （花了快半年） 决定切换到 Hugo！ 这也是我的第",
    "pubDate": "2021-12-13T00:00:00.000Z",
    "pubDateYYMMDD": "2021-12-13"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "H110m + QNCT 的 OpenCore MacOS Big Sur 黑苹果尝试",
    "link": "https://blog.lyc8503.site/2021/11/29/%E8%BD%AF%E4%BB%B6%E7%A0%94%E7%A9%B6=)/%E5%85%B6%E4%BB%96/hackintosh-1/",
    "summary": "\n    \n      <h4 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h4><p>去年苹果发布了搭载 M1 芯片的 MacBook, 随后新一代的 Mac mini 和 iMac 也使用了 Arm 架构的 M1 芯片. M1 Pro 和 M1 Max 让 M1 完全取代 Intel 芯片成为可能.</p>\n<p>目前的趋势是 M1 将会全面取代 x86 的 Intel CPU, 在技术层面上黑苹果会困难到几乎不可能. 同时黑苹果的价格优势也变得不再显著. 可能不过几年, “黑苹果”的技术就会淹没在历史的潮流中.</p>\n<p>所以趁着这最后的辉煌, 我也来尝试体验一下 Hackintosh.</p>\n    \n    ",
    "pubDate": "2021-11-29T01:26:37.000Z",
    "pubDateYYMMDD": "2021-11-29"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "Windows 下 TUN 全局透明代理的设置",
    "link": "https://blog.lyc8503.site/2021/11/17/%E8%BD%AF%E4%BB%B6%E7%A0%94%E7%A9%B6=)/%E5%85%B6%E4%BB%96/configuring-tun/",
    "summary": "\n    \n      <p>某些 Windows 系统内置的应用, 比如 SMB 或者 RDP, 不能设置 Socks5 代理.</p>\n<p>这样如果希望在公网上访问到家里服务器的 SMB 文件共享就不太方便了.</p>\n<p>还有一些应用 (比如 QQ / git) 不会默认使用系统代理, 需要手动设置, 也相对比较麻烦.</p>\n<p>上一篇文章中基于软路由网关的透明代理模式可以解决这种问题.</p>\n<p>可是笔记本不是只在一个固定的路由器下使用, 而需要携带到不同的网络环境下使用时, 设置<strong>基于 TUN 的全局代理</strong>则会更加方便.</p>\n    \n    ",
    "pubDate": "2021-11-17T12:15:09.000Z",
    "pubDateYYMMDD": "2021-11-17"
  },
  {
    "name": "Antares's Blog",
    "xmlUrl": "https://chr.fan/feed",
    "htmlUrl": "https://chr.fan",
    "title": "Arch踩坑记录",
    "link": "https://chr.fan/arch%e8%b8%a9%e5%9d%91%e8%ae%b0%e5%bd%95/",
    "summary": "<div><img width=\"273\" height=\"300\" src=\"https://chr.fan/wp-content/uploads/2021/10/93619259_p0-273x300.jpg\" class=\"attachment-medium size-medium wp-post-image\" alt=\"\" loading=\"lazy\" style=\"margin-bottom: 15px;\" srcset=\"https://chr.fan/wp-content/uploads/2021/10/93619259_p0-273x300.jpg 273w, https://chr.fan/wp-content/uploads/2021/10/93619259_p0-932x1024.jpg 932w, https://chr.fan/wp-content/uploads/2021/10/93619259_p0-768x844.jpg 768w, https://chr.fan/wp-content/uploads/2021/10/93619259_p0-1398x1536.jpg 1398w, https://chr.fan/wp-content/uploads/2021/10/93619259_p0-1864x2048.jpg 1864w\" sizes=\"(max-width: 273px) 100vw, 273px\" /></div>\n<p>不定期更新遇到的新问题，仅做记录，仅限我的笔记本上可以如下解决问题 无声音，No input or output devices  ...</p>\n<p>The post <a rel=\"nofollow\" href=\"https://chr.fan/arch%e8%b8%a9%e5%9d%91%e8%ae%b0%e5%bd%95/\">Arch踩坑记录</a> appeared first on <a rel=\"nofollow\" href=\"https://chr.fan\">α-Lyrae</a>.</p>\n",
    "pubDate": "2021-10-23T09:49:36.000Z",
    "pubDateYYMMDD": "2021-10-23"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "解决Android Studio下flutter使用签名构建失败的问题",
    "link": "https://blog.caomingjun.com/2021/10/14/%E8%A7%A3%E5%86%B3Android-Studio%E4%B8%8Bflutter%E4%BD%BF%E7%94%A8%E7%AD%BE%E5%90%8D%E6%9E%84%E5%BB%BA%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/",
    "summary": "解决Android Studio下flutter使用签名构建失败的问题",
    "pubDate": "2021-10-14T02:53:58.000Z",
    "pubDateYYMMDD": "2021-10-14"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "N1 盒子刷 Armbian 配置为软路由 & AP 方案记录",
    "link": "https://blog.lyc8503.site/2021/09/30/%E7%A1%AC%E4%BB%B6%E3%81%AE%E7%A0%94%E7%A9%B6/phicomm-n1/",
    "summary": "\n    \n      <p><del>每一场泡沫破碎的背后, 是一茬韭菜的哭泣, 更是一群垃圾佬的狂欢</del>(大雾)~~</p>\n    \n    ",
    "pubDate": "2021-09-30T05:52:22.000Z",
    "pubDateYYMMDD": "2021-09-30"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "用python编写网页更新提醒程序",
    "link": "https://blog.caomingjun.com/2021/09/29/%E7%94%A8python%E7%BC%96%E5%86%99%E7%BD%91%E9%A1%B5%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E7%A8%8B%E5%BA%8F/",
    "summary": "用python编写网页更新提醒程序，在HTML、RSS、网盘分享链接更新时提醒",
    "pubDate": "2021-09-29T07:16:56.000Z",
    "pubDateYYMMDD": "2021-09-29"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "urllib3 1.26与代理冲突问题解决",
    "link": "https://blog.caomingjun.com/2021/09/28/urllib3-1-26%E4%B8%8E%E4%BB%A3%E7%90%86%E5%86%B2%E7%AA%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
    "summary": "python出现ValueError: check_hostname requires server_hostname，如何在不回退urllib3且保持代理打开的情况下解决问题？",
    "pubDate": "2021-09-28T03:19:59.000Z",
    "pubDateYYMMDD": "2021-09-28"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "电子手写笔记解决方案 - iPlay 30(附刷机过程)",
    "link": "https://blog.lyc8503.site/2021/09/27/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB0w0/iplay30-handwriting/",
    "summary": "\n    \n      <p>开始读大学, 准备寻找一种电子手写笔记的解决方案~</p>\n<p>简单搜索了一下, 找到了以下几种方案.</p>\n<ul>\n<li><p>手写之后拍照上传</p>\n<p>优点: 无需专用设备, 书写手感好, 几乎无成本. 缺点: 麻烦低效, 要携带纸笔.</p>\n</li>\n<li><p>数位板</p>\n<p>优点: 低成本, 低延时. 缺点: 手眼不同步. 携带电脑和板, 重.</p>\n</li>\n<li><p>数位屏</p>\n<p>优点: 看着屏写, 手眼同步, 低延时. 缺点: 携带电脑和屏, 重. 数位屏较贵.</p>\n</li>\n<li><p>支持手写笔的平板</p>\n<p>优点: 手眼同步, 课后平板还能用于其他用处. 缺点: 手写延时高, 贵.</p>\n</li>\n<li><p>普通平板加被动电容笔</p>\n<p>优点: 便宜的一塌糊涂. 缺点: 基本就是垃圾.</p>\n</li>\n</ul>\n    \n    ",
    "pubDate": "2021-09-27T02:58:31.000Z",
    "pubDateYYMMDD": "2021-09-27"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "简单方便, 在 VSCode 中使用 Latex 公式和 Python 进行科学计算",
    "link": "https://blog.orangex4.cool/post/latex-sympy-calculator/",
    "summary": "<h1 id=\"简单方便-在-vscode-中使用-latex-公式和-python-进行科学计算\"   >\n          <a href=\"#简单方便-在-vscode-中使用-latex-公式和-python-进行科学计算\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>简单方便, 在 VSCode 中使用 Latex 公式和 Python 进行科学计算</h1>\n      \n\n        <h2 id=\"简介\"   >\n          <a href=\"#简介\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>简介</h2>\n      \n<p><strong>Latex Sympy Calculator</strong> 是一款 VSCode 插件, 它能够帮助你在 VSCode 写 Latex 或 Markdown 的时候, 一键计算 Latex 书写的数学公式.</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://gitee.com/orangex4/picgo/raw/master/images/Ud246889e25e84421a60a86435e693bfaJ.gif\"  alt=\"\" />\n      </p>\n<p><strong>当前支持的功能:</strong></p>\n<ol>\n<li><strong>算术:</strong> 加 (+), 减 (-), 点乘 (·), 叉乘 (×), 除法 (/), 乘方 (^), 绝对值 (|x|), 开方 (√), 虚数 (i)…</li>\n<li><strong>字母表:</strong> 英文字母 a - z, A - Z, 希腊字母 α - ω, 下标 (x_1), 重音符 (ā)…</li>\n<li><strong>常见函数:</strong> 最大公约数 (gcd), 最小公倍数 (lcm), 下界 (floor), 上届 (ceil), 最大值 (max), 最小值 (min), 取对数 (log), 自然对数 (ln), 指数 (exp), 三角函数 (sin, cos, tan, csc, sec, cot, arcsin, sinh, arsinh)…</li>\n<li><strong>微积分:</strong> 求极限 (<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>i</mi><msub><mi>m</mi><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">lim_{n\\to\\infty}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">i</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>), 求导/求微分 (<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo stretchy=\"false\">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{d}{dx}(x^2+x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span><span class=\"mord mathdefault mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>), 求积分 (<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>∫</mo><mi>x</mi><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int xdx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">x</span></span></span></span>)…</li>\n<li><strong>线性代数:</strong> 矩阵 (Matrix), 行列式 (Determinant), 转置 (Transpose), 求逆 (Inverse), 初等变换 (Elementary Transformation)…</li>\n<li><strong>关系符:</strong> 大于 (&gt;), 小于 (&lt;), 大于等于 (≥), 小于等于 (≤), 相等 (=)…</li>\n<li><strong>其他:</strong> 二项式…</li>\n</ol>\n<p>当然, 实际上还有很多其他的功能, <strong>只要是 Python Sympy 包支持的运算, 都可以通过这个插件来实现</strong>.</p>\n<p>通过这个插件, 你就不再需要一字一句地将 Latex 转译成其他语言, 然后用 Matlab 或 MMA 等数学软件进行科学计算了. 简单的 <strong>符号推导</strong>, <strong>矩阵运算</strong>, <strong>微积分</strong>, <strong>科学计算</strong>, 完全可以利用这个插件来实现.</p>\n<p>如果你也在 VSCode 中用 <strong>Latex</strong> 或 <strong>Markdown</strong> 写数学公式, 那么这就是你 <strong>必备的 VSCode 科学计算插件</strong>.</p>\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/OrangeX4/Latex-Sympy-Calculator\" >插件的 GitHub 页面</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>.</p>\n<p><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/OrangeX4/latex2sympy\" >latex2sympy2 包的 Github 页面</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>.</p>",
    "pubDate": "2021-09-17T16:00:00.000Z",
    "pubDateYYMMDD": "2021-09-17"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "为自己搭建 RSS 订阅提醒服务",
    "link": "https://blog.orangex4.cool/post/inkrss-for-self/",
    "summary": "<h1 id=\"为自己搭建-rss-订阅提醒服务\"   >\n          <a href=\"#为自己搭建-rss-订阅提醒服务\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>为自己搭建 RSS 订阅提醒服务</h1>\n      \n\n        <h2 id=\"缘由\"   >\n          <a href=\"#缘由\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>缘由</h2>\n      \n<p>自己一直苦于关注的信息源太杂, 每次想要查看新的信息, 都得打开一堆网站和 APP (如别人的博客, Github, 微博, 知乎, B站之类的). 为了改善自己的订阅体验, 在 <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.mexii.one/\" >@Mexii</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> 的帮助下, 我开始研究如何给自己搭建一个体验良好的 RSS 订阅提醒服务.</p>\n<p>最终的解决方案如下:</p>\n<ul>\n<li>Inkrss (开源项目, RSS 订阅提醒的核心, 使用免费的 Cloudflare Workers)</li>\n<li>Vercel (免费的 Serverless 云函数服务, 能够免费托管 NodeJS, Python 代码)</li>\n<li>企业微信 Server 酱 (免费开通企业微信, 然后使用 Server 酱进行信息提醒)</li>\n<li>RssHub (为了更好的体验, 需要托管在自建的服务器中, 需要服务器)</li>\n</ul>\n<p>大致效果如下:</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://gitee.com/orangex4/picgo/raw/master/images/20220216084132.png\"  alt=\"\" />\n      </p>",
    "pubDate": "2021-09-17T16:00:00.000Z",
    "pubDateYYMMDD": "2021-09-17"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "尝试自己动手维修坏掉的 Orange Pi~ Part. 2",
    "link": "https://blog.lyc8503.site/2021/09/17/%E7%A1%AC%E4%BB%B6%E3%81%AE%E7%A0%94%E7%A9%B6/orange-pi-repair-2/",
    "summary": "\n    \n      <p>时隔一年又一个月, 由于最近硬件价格实在是比较魔幻, 更加舍不得把我角落里吃灰已久 Orange Pi PC 2 扔掉了. 毕竟同样使用全志 H5 Soc 的 Orange Pi Zero Plus 小板现在都超过它当时的价格了.</p>\n<p>正好最近心血来潮升级了 电烙铁, 可调电源, 万用表等一系列工具, 所以就来继续尝试看看维修. :P</p>\n<p>维修的上一段尝试在 <a href=\"https://blog.lyc8503.site/2020/08/13/%20%E7%A1%AC%E4%BB%B6%E3%81%AE%E7%A0%94%E7%A9%B6%20/orange-pi-repair/\">这里</a>.</p>\n    \n    ",
    "pubDate": "2021-09-17T07:36:51.000Z",
    "pubDateYYMMDD": "2021-09-17"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "《提问的智慧》和《别像弱智一样提问》读后感",
    "link": "https://blog.caomingjun.com/2021/09/12/%E3%80%8A%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E3%80%8B%E5%92%8C%E3%80%8A%E5%88%AB%E5%83%8F%E5%BC%B1%E6%99%BA%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/",
    "summary": "计算机系统基础课的实验课要求阅读《提问的智慧》和《别像弱智一样提问》这两篇文章，并写一篇不少于800字的读后感。作为记录，我把读后感也发在博客里。",
    "pubDate": "2021-09-12T15:07:04.000Z",
    "pubDateYYMMDD": "2021-09-12"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "Hp 39gs 图形科学计算器硬件魔改 48gii 小记",
    "link": "https://blog.lyc8503.site/2021/09/10/%E7%A1%AC%E4%BB%B6%E3%81%AE%E7%A0%94%E7%A9%B6/hp39gs-modify/",
    "summary": "\n    \n      <p>高中期间学校要求竞赛使用的计算器是 卡西欧 991 CNX, 可是它功能太少, 很多数学计算都不能进行. 学校又不允许带手机.</p>\n<p>于是只能转向”古老”的科学计算器, 发现了一款性价比很高的科学计算器 – HP 39gs.</p>\n<p>HP 39gs 这款机器现在某宝涨价到近 80r 了, 我当时咸鱼入手的时候只要 50r, 之前好像还只要 20-30r, </p>\n<p>HP 39gs 本身功能也不是特别多, 可能比起卡西欧只多了绘图和编程的功能.</p>\n<p>但是 HP 39gs 和支持 CAS 的 HP 48gii 只差了按键印刷和 一块 Flash 而已. 魔改之后计算器大概就变成了一个简陋版 Matlab 了. 可玩性增强很多.</p>\n    \n    ",
    "pubDate": "2021-09-10T06:27:22.000Z",
    "pubDateYYMMDD": "2021-09-10"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "zsh配置",
    "link": "https://blog.caomingjun.com/2021/09/09/zsh%E9%85%8D%E7%BD%AE/",
    "summary": "我的zsh配置",
    "pubDate": "2021-09-09T03:07:54.000Z",
    "pubDateYYMMDD": "2021-09-09"
  },
  {
    "name": "Cmj's Blog",
    "xmlUrl": "https://blog.caomingjun.com/atom.xml",
    "htmlUrl": "https://blog.caomingjun.com/",
    "title": "个人博客建立过程记录",
    "link": "https://blog.caomingjun.com/2021/09/09/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/",
    "summary": "基于Hexo+Github+Cloudflare Pages建立个人博客",
    "pubDate": "2021-09-09T01:37:34.000Z",
    "pubDateYYMMDD": "2021-09-09"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "在提问之前",
    "link": "https://blog.orangex4.cool/post/before-asking-questions/",
    "summary": "<h1 id=\"在提问之前\"   >\n          <a href=\"#在提问之前\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>在提问之前</h1>\n      \n<p>阅读<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md\" >《提问的智慧》</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>有感.</p>\n<p>每一个人, 特别是学计算机的人, 都要学会通过 STFW 和 RTFM 独立解决问题. 这是由多方原因决定的.</p>",
    "pubDate": "2021-09-07T16:00:00.000Z",
    "pubDateYYMMDD": "2021-09-07"
  },
  {
    "name": "OrangeX4's Blog",
    "xmlUrl": "https://orangex4.cool/atom.xml",
    "htmlUrl": "https://orangex4.cool/",
    "title": "在 Markdown 中书写伪代码",
    "link": "https://blog.orangex4.cool/post/markdown-pseudocode/",
    "summary": "<h1 id=\"在-markdown-中书写伪代码\"   >\n          <a href=\"#在-markdown-中书写伪代码\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>在 Markdown 中书写伪代码</h1>\n      \n\n        <h2 id=\"0-想法来源\"   >\n          <a href=\"#0-想法来源\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a>0. 想法来源</h2>\n      \n<p>最近上算法课需要书写伪代码, 但伪代码一般都是通过 Latex 书写的, 但我又不想专门为了它去写 Latex, 所以就开始考虑如何在 Markdown 中书写伪代码.</p>\n<p>根据 “Atwood’s Law” 原则:</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n<p>任何可以用 JavaScript 来写的应用, 最终都将用 JavaScript 来写.</p>\n</blockquote>\n<p>我再次将目光投向前端, 寻找符合前端思想的解决方案.</p>\n<p>最终我选定了 VSCode + Markdown Preview Enhanced + pseudocode.js 的组合.</p>\n<p>(缺点是不能在 VSCode 中实时预览, 这个问题的主要原因是我不想再次魔改和维护别人写的插件了.)</p>\n<p>大概效果:</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://pic4.zhimg.com/80/v2-baee81855005c2556010dcc197869157_720w.jpg\"  alt=\"\" />\n      </p>",
    "pubDate": "2021-09-02T16:00:00.000Z",
    "pubDateYYMMDD": "2021-09-02"
  },
  {
    "name": "Antares's Blog",
    "xmlUrl": "https://chr.fan/feed",
    "htmlUrl": "https://chr.fan",
    "title": "Live2DViewerEX 创意工坊lpk文件分析 – 动态调试Unity程序",
    "link": "https://chr.fan/lpk-decrypt/",
    "summary": "<div><img width=\"300\" height=\"157\" src=\"https://chr.fan/wp-content/uploads/2021/05/8-300x157.jpg\" class=\"attachment-medium size-medium wp-post-image\" alt=\"\" loading=\"lazy\" style=\"margin-bottom: 15px;\" srcset=\"https://chr.fan/wp-content/uploads/2021/05/8-300x157.jpg 300w, https://chr.fan/wp-content/uploads/2021/05/8-1024x536.jpg 1024w, https://chr.fan/wp-content/uploads/2021/05/8-768x402.jpg 768w, https://chr.fan/wp-content/uploads/2021/05/8.jpg 1300w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></div>\n<p>声明：本人不会提供任何解密lpk文件的程序。本文仅仅是技术向的探讨、经验分享。 如果您认为本文侵犯了您的权益，请联系我，我会立刻删 ...</p>\n<p>The post <a rel=\"nofollow\" href=\"https://chr.fan/lpk-decrypt/\">Live2DViewerEX 创意工坊lpk文件分析 &#8211; 动态调试Unity程序</a> appeared first on <a rel=\"nofollow\" href=\"https://chr.fan\">α-Lyrae</a>.</p>\n",
    "pubDate": "2021-08-31T20:45:13.000Z",
    "pubDateYYMMDD": "2021-08-31"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "生成含有使用者备用名称 (SAN) 的 SSL 证书, 解决 Chrome 和 Okhttp HTTPS 报错",
    "link": "https://blog.lyc8503.site/2021/08/29/%E8%BD%AF%E4%BB%B6%E7%A0%94%E7%A9%B6=)/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%B4%E6%8A%A4&%E9%85%8D%E7%BD%AEder%E6%97%A5%E5%B8%B8/self-signed-cert-with-san/",
    "summary": "\n    \n      <p>之前设置了 ipv6 DDNS, 可以从外网访问到家里 AIO 上的 http 服务器.</p>\n<p>由于只是自己使用, 就打算使用自签名证书. 但按照网上教程生成的证书导入 Chrome 后报错 <code>ERR_CERT_COMMON_NAME_INVALID</code>, 在 OkHttp 中报错<code>Hostname xxx is not verified.</code></p>\n<p>查阅资料发现是生成的证书没有 SAN 的缘故, 网上生成 SAN 自签名证书的教程很多都有问题, 最终找到一种可行的方法, 记录在此.</p>\n    \n    ",
    "pubDate": "2021-08-29T06:58:09.000Z",
    "pubDateYYMMDD": "2021-08-29"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep9. 群晖 ipv6 阿里 DDNS 设置",
    "link": "https://blog.lyc8503.site/2021/08/24/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/9-syno-ipv6-ddns/",
    "summary": "\n    \n      <p><strong>初探 ipv6 &amp; 群晖 ipv6 DDNS 的设置.</strong></p>\n    \n    ",
    "pubDate": "2021-08-24T01:43:33.000Z",
    "pubDateYYMMDD": "2021-08-24"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep8. 记一次 ESXi 黑群晖失联排查",
    "link": "https://blog.lyc8503.site/2021/08/23/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/8-syno-down-troubleshooting/",
    "summary": "\n    \n      <p><strong>黑群晖不定时失联, 排查故障过程记录.</strong></p>\n    \n    ",
    "pubDate": "2021-08-23T14:48:40.000Z",
    "pubDateYYMMDD": "2021-08-23"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep7. 硬件的一些更改",
    "link": "https://blog.lyc8503.site/2021/08/23/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/7-hardware-upgrade-and-diy/",
    "summary": "\n    \n      <p><strong>Hpe Gen10+ 有点令我失望… 后闲鱼出手改用自己组装的整机.</strong></p>\n    \n    ",
    "pubDate": "2021-08-23T04:26:52.000Z",
    "pubDateYYMMDD": "2021-08-23"
  },
  {
    "name": "lyc8503's Blog",
    "xmlUrl": "https://blog.lyc8503.site/atom.xml",
    "htmlUrl": "https://blog.lyc8503.site/",
    "title": "AIO Ep6. ESXi 黑群晖设置时的一些小技巧和踩的坑",
    "link": "https://blog.lyc8503.site/2021/08/13/%E4%B8%93%E9%A2%98%E5%90%91%E7%A0%94%E7%A9%B6/AllInOne%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/6-software-implementation/",
    "summary": "\n    \n      <p><strong>如题.</strong> 主要是归类一些我参考的教程.</p>\n    \n    ",
    "pubDate": "2021-08-13T02:39:32.000Z",
    "pubDateYYMMDD": "2021-08-13"
  }
]